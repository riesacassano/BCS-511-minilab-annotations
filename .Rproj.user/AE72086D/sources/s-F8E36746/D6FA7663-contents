---
title: "data_processing"
author: "Riesa Cassano"
date: "2/22/2022"
output: html_document
---
```{r libraries, include=FALSE}
library(tidyverse)
library(magrittr)
```

```{r load data, include=FALSE}

# load data
d <- as_tibble(read.csv('data/data_022222.csv'))

# convert exp_subject_id to a factor
d <- mutate(d, exp_subject_id = as.factor(exp_subject_id))

```
Survey and strategy data are stored in separate data frames (`d.survey` and `d.strategy`). Which condition each subject got for practice is stored in a separate data frame (`d.practice_cond`).
```{r process survey and strategy data, include=FALSE}
# get the survey answers and put them in a separate tibble
survey_qs <- c('Frequenc','Instr','hour','num_instru','name_instru','age_range',
               'best_instru','music_theory','listen_time','genre1','genre2',
               'genre3','earworm','imagery1','imagery2','imagery3','ab_pitch',
               'relative_pitch','exp_subject_id','familiarity','played_notplayed')

d.survey <- d %>%
  # filter out rows not related to survey
  filter(Block_Name == 'post_survey') %>%
  # only grab survey answers
  select(all_of(survey_qs)) %>%
  # put subject ID at front
  relocate(exp_subject_id) %>%
  write_csv('data/survey.csv')

# get the strategy answers and put them in a separate tibble
d.strategy <- d %>%
  select(c('exp_subject_id','Task_Name','strategy')) %>%
  filter(strategy != "") #%>% # some subjects might not always answer
  # this just gives us when they did answer
  #write_csv('data/strategy.csv')

# what condition did the subject get for practice?
d.practice_cond <- d %>%
  select(c('exp_subject_id','factor1_tg1_task28')) %>%
  rename('practice_cond' = 'factor1_tg1_task28') %>%
  filter(practice_cond != "") #%>%
  #write_csv('data/practice_cond.csv')
```

```{r processing function for presses, echo=FALSE}
process_responses <- function(data){
  all_vals <- data %>%
    strsplit("values=") %>%
    transpose()
  all_vals <- flatten(all_vals[2])
  
  processed_data <- c()
  for (i in 1:length(all_vals)){
    vals = flatten(strsplit(toString(all_vals[i][1]), ";"))
    vals = vals[-1] # remove first value (empty)
    vals = sub('\"', '', vals) # remove \" from last value
    vals = as.numeric(as.list(vals)) # save as a list of numerics
    vals = as_tibble(vals / 1000) # convert ms to s and make a tibble
    processed_data <- c(processed_data,vals)
  }
  return(processed_data)
}

```

After processing, data contains the subject ID, task name, and the response values for each run. 

```{r process responses, echo=FALSE}
# filter/select to get only press data
d %<>% 
  select(c('exp_subject_id','Task_Name','space_press1','space_press2')) %>%
  filter(space_press1 != "") %>%
  filter(exp_subject_id != 377660) %>%
  write_csv('data/responses.csv')

# want to save before we process responses



space_press1_vals <- process_responses(d$space_press1)
space_press2_vals <- process_responses(d$space_press2)

d %<>%
  mutate(
    response1_vals = space_press1_vals,
    response2_vals = space_press2_vals,
    space_press1 = NULL,
    space_press2 = NULL
  )

print(d)

print(unique(d$exp_subject_id))

```

Response values in seconds are stored in doubles. The length of the double is the number of responses for that stimulus.

```{r, echo=FALSE}
#print(d$response1_vals[2])
#print(lengths(d$response1_vals[2]))
```